name: build-test


on:
  push:
    tags:
      - "*.*.*"

jobs:
  get-release-url:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      release-url: ${{ steps.get-url.outputs.url }}
      latest-tag: ${{ steps.get-url.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: get-url
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "Latest Tag: $TAG"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          URL=$(curl -sL \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/zairadotsh/actions-test/releases/tags/$TAG" \
          | jq -r '.url')
          echo "Latest Release URL: $URL"
          echo "url=$URL" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: build
        run: |
          tar -czvf app.tar.gz ./app
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: tgz-${{ github.run_id }}
          path: ./app.tar.gz
          retention-days: 1
          if-no-files-found: error
    
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - get-release-url
      - build
    steps:
      - name: download
        uses: actions/download-artifact@v4
        with:
          name: tgz-${{ github.run_id }}
          path: app.tar.gz
      - name: list
        run: |
          ls -al
      - name: publish
        env:
          RELEASE_URL: ${{ needs.get-release-url.outputs.release-url }}
        run: |
          echo "Adding app tar to $RELEASE_URL"
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/octet-stream" \
          "${{ needs.get-release-url.outputs.release-url }}/assets?name=app.tar.gz" \
          --data-binary "@app.tar.gz"
